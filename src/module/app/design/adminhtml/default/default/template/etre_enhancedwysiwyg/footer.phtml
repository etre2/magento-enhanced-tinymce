<?php echo $this->getChildHtml('originalFooter') ?>
<script src="<?php echo Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_JS); ?>etre_enhancedwysiwyg/ace/ace.js"></script>
<script>
    function sortByVersionDescending(jQuerysLoadedNoDuplicates) {
        jQuerysLoadedNoDuplicates.sort(function (a, b) {
            let jqueryVersionA = (a.fn.jquery).substring(0, 5);
            let jqueryVersionb = (b.fn.jquery).substring(0, 5);
            if (jqueryVersionA > jqueryVersionb) return -1;
            if (jqueryVersionA < jqueryVersionb) return 1;
        })
    }
    function removeVersionDuplicates(jQuerysLoaded) {
        var jQuerysLoadedNoDuplicates = jQuerysLoaded.filter(function (item, pos) {
            return jQuerysLoaded.indexOf(item) == pos;
        })
        return jQuerysLoadedNoDuplicates;
    }
    function getLoadedJquerys() {
        var jQuerysLoaded = [];
        for (var globalVariable in window) {
            var globalFunction = window[globalVariable];
            if (typeof(globalFunction) == "function") {
                try {
                    /* loadedJqueryVersions will break our try if
                     * globalFunction is not a jquery function */
                    var loadedJqueryVersion = globalFunction.fn.jquery;
                    var loadedJquery = globalFunction;
                } catch (error) {
                    continue;
                }
                jQuerysLoaded.push(loadedJquery)
            }
        }
        var jQuerysLoadedNoDuplicates = removeVersionDuplicates(jQuerysLoaded);
        sortByVersionDescending(jQuerysLoadedNoDuplicates);
        return jQuerysLoadedNoDuplicates;
    }
    var jQueryLoadedVersions = getLoadedJquerys();
    if(jQueryLoadedVersions.length > 0){
        let latestVersionAlreadyLoadedInMagento = jQueryLoadedVersions[0];
        jQuery = latestVersionAlreadyLoadedInMagento
    }

    // Hook up ACE editor to all textareas with data-editor attribute

    jQuery(document).ready(function () {
        initializeAceEditor();
    });
    Ajax.Responders.register({
        onComplete: function (request, transport) {
            initializeAceEditor()
        }
    })

    function initializeAceEditor() {
        jQuery('textarea:not(.ace_text-input)').each(function () {
            var texareaFormField = jQuery(this);
            var textAreaContainer = texareaFormField.parent();
            var textAreaId = texareaFormField.attr('id')
            var newEditorDev = jQuery('<div>', {
                position: 'absolute',
                width: '100%'/*textarea.width()*/,
                height: texareaFormField.height(),
                'class': texareaFormField.attr('class'),
                'id': texareaFormField.attr('id') + "_editor"
            }).insertBefore(texareaFormField);
            try {
                ace.aceBaseUrl = "<?php echo Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_JS); ?>etre_enhancedwysiwyg/ace";
                var editor = ace.edit(newEditorDev[0]);
            } catch (error) {
                newEditorDev.remove()
                console.log("Skipping loading of Ace Editor on '" + textAreaId + "': ", error)
                return false;
            }

            textAreaContainer.css({
                'resize': 'both',
                'overflow': 'auto'
            })
            textAreaContainer.addClass('ace-editor-textarea-container')
            var mode = texareaFormField.data('editor');

            switch (textAreaId) {
                case "block_content":
                case "group_4description":
                case "page_content":
                case "cms_content":
                    mode = "html"
                    break;
                case "group_6custom_layout_update":
                case "page_layout_update_xml":
                case "page_custom_layout_update_xml":
                    mode = "xml"
                    break;
                default:
                    mode = "text"
            }
            texareaFormField.css('visibility', 'hidden');
            texareaFormField.css('width', '0px');
            texareaFormField.css('height', '0px');
            texareaFormField.css('overflow', 'hidden');
            setInterval(function () {
                editor.resize()
            }, 3000)
            editor.$blockScrolling = Infinity;
            editor.getSession().setValue(texareaFormField.val());
            editor.getSession().on('change', function () {
                var editorContent = editor.getSession().getValue();
                texareaFormField.val(editorContent)
            });
            if (mode) {
                editor.getSession().setMode("ace/mode/" + mode);
            }
            //console.log(mode, editor.getSession().getMode().$id)
            /*            if(mode=="xml"){
             beautify.beautify(editor.session);
             }*/
            if (mode !== "text") {
                /* code mode config */
                editor.getSession().setUseSoftTabs(true);
                editor.getSession().setTabSize(4);
                editor.setHighlightSelectedWord(1);
                editor.setDisplayIndentGuides(true);
                editor.setTheme('ace/theme/idle_fingers');
                editor.getSession().setFoldStyle('markbeginend');
                editor.setOption("scrollPastEnd", 0.7)
            } else {
                /* text mode config */
                editor.getSession().setOption('indentedSoftWrap', false);
                editor.setOption('highlightActiveLine', 0);
                editor.setOption('highlightGutterLine', 0);
                editor.setOption('showGutter', 0);
            }
            /* Global Config */
            editor.getSession().setUseWrapMode('free');
            editor.setFontSize('16px');
            editor.setReadOnly(false);

            if (jQuery('button.scalable.add-widget.plugin')) {
                var nearestAceEditorToWysiwygEditor;
                var aceEditorNearTinyMce;
                var pendingChanges;
                var ace_editor_hidden = false;
                setInterval(function () {
                    if (jQuery(".dialog.popup-window, .mceLayout").is(":visible")) {
                        console.log("Editor Pending Changes");
                        pendingChanges = true
                    } else if (pendingChanges == true) {
                        console.log("Apply Changes To Editor");
                        editor.getSession().setValue(texareaFormField.val());
                        pendingChanges = false;
                    }
                    if (jQuery(".mceLayout").is(":visible") && ace_editor_hidden == false) {
                        ace_editor_hidden = true
                        /* Setting here so jQuery only searches when needed */
                        aceEditorNearTinyMce = jQuery(".mceEditor").prevAll(".ace_editor");
                        nearestAceEditorToWysiwygEditor = aceEditorNearTinyMce.hide();
                        console.log("WYSIWYG Editor is Active")
                    }
                    if (!jQuery(".mceLayout").is(":visible") && ace_editor_hidden == true) {
                        ace_editor_hidden = false
                        /* Setting here so jQuery only searches when needed */
                        nearestAceEditorToWysiwygEditor = aceEditorNearTinyMce.show();
                        console.log("WYSIWYG Editor is Inactive")
                    }
                }, 1000)
            }
        });
    }
</script>